from django.db import models
from django.contrib.postgres.search import SearchVector, SearchVectorField

# NOTES:
# - null=False, blank=False are by default but I want to be specific
class Category(models.Model):
    """
    Product categories
    Assuming one product falls into one category only
    """
    name = models.CharField(max_length=200, null=False, blank=False)

    def __repr__(self) -> str:
        return str(self.name)

    def __str__(self) -> str:
        return repr(self)

class Tag(models.Model):
    """
    Product tags
    Assuming one product can have multiple tags and one tag
    can belong to multiple products
    """
    name = models.CharField(max_length=200, null=False, blank=False)

    def __repr__(self) -> str:
        return str(self.name)

    def __str__(self) -> str:
        return repr(self)

class Product(models.Model):
    """
    Individual products
    """
    # NOTES:
    # - Products should include images but exempted here as it's not mentioned
    # in the assignment description
    name = models.CharField(max_length=200, null=False, blank=False)
    price = models.FloatField(null=False, blank=False)
    description = models.TextField(null=False, blank=False)
    # Generated by AI
    # Human explanation: This field is auto-calculated by the database
    description_tsv = models.GeneratedField(
        expression=SearchVector('description', config='english'),
        output_field=SearchVectorField(),
        db_persist=True,          # STORED generated column
        editable=False,
        null=True
    )
    # End generated by AI
    category = models.ForeignKey(Category, on_delete=models.SET_NULL, null=True, blank=True)
    tag = models.ManyToManyField(Tag)

    def __repr__(self) -> str:
        return str(self.name)

    def __str__(self) -> str:
        return repr(self)

    def render_tags(self) -> str:
        """
        Return tags as comma-separated list string
        Used in HTML and print statements
        """
        return ', '.join(self.tag.values_list('name', flat=True))
